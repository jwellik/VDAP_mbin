function T = rdSummaryDat(inputfiles, startRow, endRow)
%RDSUMMARYDAT Reads a *Summary.dat file produced by the NEIC Subspace
%Detector
%   T
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [DATE1,TIME1,LAT,LON,DEPTH,MAG,MAG_TYPE,N,S,C,L,PHASE,DATE2,TIME2,CC,CC_THRESH,S2N]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [date1,time1,lat,lon,depth,mag,mag_type,N,S,C,L,phase,date2,time2,cc,cc_thresh,s2n] = importfile('KBUR_2015_145const_thresh_summary.txt',1, 30);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/10/11 16:21:27

%% Initialize variables.

T = table; warning('RDSUMMARYDAT should initialize output table that has proper column names.')

delimiter = ' ';
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: text (%s)
%	column8: text (%s)
%   column9: text (%s)
%	column10: text (%s)
%   column11: text (%s)
%	column12: text (%s)
%   column13: text (%s)
%	column14: text (%s)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%f%f%f%f%s%s%s%s%s%s%s%s%f%f%f%[^\n\r]';

%% Open the text file.

files = dir(inputfiles);
filepath = fileparts(inputfiles);

for n = 1:numel(files)
    
    filename = fullfile(filepath, files(n).name);
    fileID = fopen(filename,'r');
    
    %% Read columns of data according to format string.
    % This call is based on the structure of the file used to generate this
    % code. If an error occurs for a different file, try regenerating the code
    % from the Import Tool.
    dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, ...
        'Delimiter', delimiter, 'MultipleDelimsAsOne', true, ...
        'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
    for block=2:length(startRow)
        frewind(fileID);
        dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
        for col=1:length(dataArray)
            dataArray{col} = [dataArray{col};dataArrayBlock{col}];
        end
    end
    
    %% Close the text file.
    fclose(fileID);
    
    %% Post processing for unimportable data.
    % No unimportable data rules were applied during the import, so no post
    % processing code is included. To generate code which works for
    % unimportable data, select unimportable cells in a file and regenerate the
    % script.
    
    %% Allocate imported array to column variable names
    if ~isempty(dataArray{:, 1})
        
        % get date of file
%         % assume format of filename looks like this:
%         % KBUR_2015_142const_thresh_summary.dat
%         data = strsplit(files(n).name, '_');
%         year_of_file = datenum(data(2), 'yyyy');
% %         date_of_file = year_of_file + str2double(data{3}(1:3));
        current_date = datevec(now);
        current_year = current_date(1);
        current_year = datenum(current_year, 1, 1);
        
        date1 = dataArray{:, 1};
        time1 = dataArray{:, 2};
        warning('RDSUMMARYDAT does not parse dates correctly.')
        dn1 = datenum(date1) + datenum(time1, 'HH:MM:SS') - current_year;
        dt1 = datetime(datestr(dn1));
        lat = dataArray{:, 3};
        lon = dataArray{:, 4};
        depth = dataArray{:, 5};
        mag = dataArray{:, 6};
        mag_type = dataArray{:, 7};
        N = dataArray{:, 8};
        S = dataArray{:, 9};
        C = dataArray{:, 10};
        L = dataArray{:, 11};
        phase = dataArray{:, 12};
        date2 = dataArray{:, 13};
        time2 = dataArray{:, 14};
        dn2 = datenum(date2) + datenum(time2, 'HH:MM:SS') - current_year;
        dt2 = datetime(datestr(dn2));
        cc = dataArray{:, 15};
        cc_thresh = dataArray{:, 16};
        s2n = dataArray{:, 17};
        
        %% Create output table
        TMP = table(dn1, dt1, lat, lon, depth, mag, mag_type, ...
            N, S, C, L, ...
            phase, dn2, dt2, ...
            cc, cc_thresh, s2n);
        
        T = [T; TMP];
        
    end
    
  
    
end

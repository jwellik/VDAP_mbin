function [catalog] = import1ANSSfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [DATETIME,LATITUDE,LONGITUDE,DEPTH,MAGNITUDE,MAGTYPE,NBSTATIONS,GAP,DISTANCE,RMS,SOURCE,EVENTID]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [DATETIME,LATITUDE,LONGITUDE,DEPTH,MAGNITUDE,MAGTYPE,NBSTATIONS,GAP,DISTANCE,RMS,SOURCE,EVENTID]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [DateTime,Latitude,Longitude,Depth,Magnitude,MagType,NbStations,Gap,Distance,RMS,Source,EventID] = importfile('tmp.csv',19, 7309);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/03/30 13:41:31
catalog = [];

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 19;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: text (%s)
%   column7: double (%f)
%	column8: text (%s)
%   column9: text (%s)
%	column10: double (%f)
%   column11: text (%s)
%	column12: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%f%f%s%f%s%s%f%s%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
DateTime = dataArray{:, 1};
Latitude = dataArray{:, 2};
Longitude = dataArray{:, 3};
Depth = dataArray{:, 4};
Magnitude = dataArray{:, 5};
MagType = dataArray{:, 6};
NbStations = dataArray{:, 7};
Gap = dataArray{:, 8};
Distance = dataArray{:, 9};
RMS = dataArray{:, 10};
Source = dataArray{:, 11};
EventID = dataArray{:, 12};

for i=1:size(DateTime,1)-2

    catalog(i).EVENTID = char(EventID(i));
    catalog(i).DateTime = datestr(datenum(DateTime(i)),'yyyy/mm/dd HH:MM:SS.FFF');
    catalog(i).Latitude = Latitude(i);
    catalog(i).Longitude = Longitude(i);
    catalog(i).Depth = Depth(i);
    catalog(i).AUTHOR = char(Source(i));
    catalog(i).Magnitude = Magnitude(i);
    catalog(i).magType = char(MagType(i));
    catalog(i).nst = NbStations(i);
    catalog(i).gap = Gap(i);
    catalog(i).Distance= Distance(i);
    catalog(i).rms= RMS(i);
    
end

if isempty(catalog)
    warning('catalog empty')
end

end

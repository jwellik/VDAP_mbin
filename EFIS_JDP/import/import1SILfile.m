function [catalog] = import1SILfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [NR,DAGS,TIMI,BREIDD,LENGD,DYPI,M,ML] = IMPORTFILE(FILENAME) Reads data
%   from text file FILENAME for the default selection.
%
%   [NR,DAGS,TIMI,BREIDD,LENGD,DYPI,M,ML] = IMPORTFILE(FILENAME, STARTROW,
%   ENDROW) Reads data from rows STARTROW through ENDROW of text file
%   FILENAME.
%
% Example:
%   [Nr,Dags,Timi,Breidd,Lengd,Dypi,M,ML] = importfile('SIL_1995_06.txt',2, 216);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/03/09 11:01:27

%% Initialize variables.
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%4f%9f%11f%9f%10f%7f%6f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Nr = dataArray{:, 1};
Dags = dataArray{:, 2};
Timi = dataArray{:, 3};
Breidd = dataArray{:, 4};
Lengd = dataArray{:, 5};
Dypi = dataArray{:, 6};
M = dataArray{:, 7};
ML = dataArray{:, 8};

%%
for i=1:numel(Nr)
    
    yrmody = Dags(i);
    hms = sprintf('%010.3f',Timi(i));
    dstr = [int2str(yrmody),hms];
    
    dts(i) = datenum(dstr,'yyyymmddHHMMSS.FFF');
    
    catalog(i).Latitude = Breidd(i);
    catalog(i).Longitude = Lengd(i);
    catalog(i).Depth = Dypi(i);
    catalog(i).Magnitude = M(i);
    catalog(i).DateTime = datestr(dts(i),'yyyy/mm/dd HH:MM:SS.FFF');
    catalog(i).TypeMag = 'M';
    catalog(i).ML = ML(i);
    catalog(i).AUTHOR = 'SIL';

end
    
